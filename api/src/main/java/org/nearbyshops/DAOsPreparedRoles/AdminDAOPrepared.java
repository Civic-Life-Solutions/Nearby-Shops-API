package org.nearbyshops.DAOsPreparedRoles;

import com.zaxxer.hikari.HikariDataSource;
import org.nearbyshops.Globals.Globals;
import org.nearbyshops.ModelRoles.Admin;

import java.sql.*;


public class AdminDAOPrepared {


	private HikariDataSource dataSource = Globals.getDataSource();


	@Override
	protected void finalize() throws Throwable {
		// TODO Auto-generated method stub
		super.finalize();
	}


//	public int saveAdmin(Admin admin) {
//
//		Connection connection = null;
//		PreparedStatement statement = null;
//		int rowIdOfInsertedRow = -1;
//
//		String insertEndUser = "INSERT INTO "
//				+ Admin.TABLE_NAME
//				+ "("
//				+ Admin.ADMIN_NAME + ","
//				+ Admin.USER_NAME + ","
//				+ Admin.PASSWORD + ","
//				+ Admin.ABOUT + ","
//				+ Admin.PROFILE_IMAGE_URL
//				+ ") VALUES(?,?,?, ?,?)";
//
//		try {
//
//			connection = dataSource.getConnection();
//
//			statement = connection.prepareStatement(insertEndUser, PreparedStatement.RETURN_GENERATED_KEYS);
//
//			statement.setString(1, admin.getAdministratorName());
//			statement.setString(2, admin.getUsername());
//			statement.setString(3, admin.getPassword());
//
//			statement.setString(4,admin.getAbout());
//			statement.setString(5,admin.getProfileImageURL());
//
//			rowIdOfInsertedRow = statement.executeUpdate();
//
//			ResultSet rs = statement.getGeneratedKeys();
//
//			if (rs.next()) {
//				rowIdOfInsertedRow = rs.getInt(1);
//			}
//
//
//			System.out.println("Key autogenerated SaveDistributor: " + rowIdOfInsertedRow);
//
//
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} finally {
//
//			try {
//
//				if (statement != null) {
//					statement.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//
//			try {
//
//				if (connection != null) {
//					connection.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//
//
//		return rowIdOfInsertedRow;
//	}


	public int saveDefaultAdmin(Admin admin) {

		Connection connection = null;
		PreparedStatement statement = null;
		int rowIdOfInsertedRow = -1;

		String insertEndUser = "INSERT INTO "
				+ Admin.TABLE_NAME
				+ "("
				+ Admin.ADMIN_NAME + ","
				+ Admin.USER_NAME + ","
				+ Admin.PASSWORD + ","
				+ Admin.ADMIN_ID
				+ ") VALUES(?,?,?,?)";

		try {

			connection = dataSource.getConnection();

			statement = connection.prepareStatement(insertEndUser, PreparedStatement.RETURN_GENERATED_KEYS);

			statement.setString(1, admin.getAdministratorName());
			statement.setString(2, admin.getUsername());
			statement.setString(3, admin.getPassword());
			statement.setInt(4,1);

			rowIdOfInsertedRow = statement.executeUpdate();

			ResultSet rs = statement.getGeneratedKeys();

			if (rs.next()) {
				rowIdOfInsertedRow = rs.getInt(1);
			}


			System.out.println("Key autogenerated SaveDistributor: " + rowIdOfInsertedRow);


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return rowIdOfInsertedRow;
	}




	public int updateAdmin(Admin admin) {


		String updateStatement = "UPDATE " + Admin.TABLE_NAME
				+ " SET "
				+ Admin.ADMIN_NAME + " = ?,"
				+ Admin.USER_NAME + " = ?,"
				+ Admin.PASSWORD + " = ?,"

				+ Admin.ABOUT + " = ?,"
				+ Admin.PROFILE_IMAGE_URL + " = ?,"

				+ Admin.PHONE_NUMBER + " = ?,"
				+ Admin.DESIGNATION + " = ?,"
				+ Admin.ACCOUNT_PRIVATE + " = ?"

				+ " WHERE " + Admin.ADMIN_ID + " = ?";

		Connection connection = null;
		PreparedStatement statement = null;
		int updatedRows = -1;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(updateStatement, PreparedStatement.RETURN_GENERATED_KEYS);

			statement.setString(1, admin.getAdministratorName());
			statement.setString(2, admin.getUsername());
			statement.setString(3, admin.getPassword());

			statement.setString(4,admin.getAbout());
			statement.setString(5,admin.getProfileImageURL());

			statement.setString(6,admin.getPhone());
			statement.setString(7,admin.getDesignation());
			statement.setObject(8,admin.isAccountPrivate());

			statement.setObject(9, admin.getAdminID());

			updatedRows = statement.executeUpdate();


			System.out.println("Total rows updated: " + updatedRows);

			//conn.close();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return updatedRows;

	}


//	public int deleteAdmin(int adminID) {
//
//		String deleteStatement = "DELETE FROM " + Admin.TABLE_NAME
//				+ " WHERE "
//				+ Admin.ADMIN_ID + " = ?";
//
//
//		Connection connection = null;
//		PreparedStatement statement = null;
//		int rowsCountDeleted = 0;
//		try {
//
//			connection = dataSource.getConnection();
//			statement = connection.prepareStatement(deleteStatement);
//
//			statement.setInt(1, adminID);
//
//			rowsCountDeleted = statement.executeUpdate();
//
//			System.out.println(" Deleted Count: " + rowsCountDeleted);
//
//			connection.close();
//
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} finally
//
//		{
//
//			try {
//
//				if (statement != null) {
//					statement.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//
//			try {
//
//				if (connection != null) {
//					connection.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//
//
//		return rowsCountDeleted;
//	}



//
//	public ArrayList<Admin> getAdmin() {
//		String query = "SELECT * FROM " + Admin.TABLE_NAME;
//		ArrayList<Admin> serviceProvidersList = new ArrayList<Admin>();
//
//
//		Connection connection = null;
//		Statement statement = null;
//		ResultSet rs = null;
//
//		try {
//
//			connection = dataSource.getConnection();
//			statement = connection.createStatement();
//
//			rs = statement.executeQuery(query);
//
//			while (rs.next()) {
//
//				Admin admin = new Admin();
//
//				admin.setAdminID(rs.getInt(Admin.ADMIN_ID));
//				admin.setAdministratorName(rs.getString(Admin.ADMIN_NAME));
//				admin.setUsername(rs.getString(Admin.USER_NAME));
//				admin.setPassword(rs.getString(Admin.PASSWORD));
//
//				admin.setAbout(rs.getString(Admin.ABOUT));
//				admin.setProfileImageURL(rs.getString(Admin.PROFILE_IMAGE_URL));
//
//				serviceProvidersList.add(admin);
//
//			}
//
//
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} finally
//
//		{
//
//			try {
//				if (rs != null) {
//					rs.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//
//			try {
//
//				if (statement != null) {
//					statement.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//
//			try {
//
//				if (connection != null) {
//					connection.close();
//				}
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//
//
//		return serviceProvidersList;
//	}


	public Admin getAdmin(int adminID) {

		String query = "SELECT "
						+ Admin.ADMIN_ID + ","
						+ Admin.USER_NAME + ","
						+ Admin.PASSWORD + ","
						+ Admin.ADMIN_NAME + ","
						+ Admin.ABOUT + ","
						+ Admin.PROFILE_IMAGE_URL + ","
						+ Admin.PHONE_NUMBER + ","
						+ Admin.DESIGNATION + ","
						+ Admin.ACCOUNT_PRIVATE + ","
						+ Admin.TIMESTAMP_CREATED + ""

						+ " FROM " + Admin.TABLE_NAME
						+ " WHERE " + Admin.ADMIN_ID + " = ?";


		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;


		//Distributor distributor = null;
		Admin admin = null;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			statement.setObject(1,adminID);

			rs = statement.executeQuery();

			while (rs.next()) {
				admin = new Admin();

				admin.setAdminID(rs.getInt(Admin.ADMIN_ID));
				admin.setAdministratorName(rs.getString(Admin.ADMIN_NAME));
				admin.setUsername(rs.getString(Admin.USER_NAME));
				admin.setPassword(rs.getString(Admin.PASSWORD));

				admin.setAbout(rs.getString(Admin.ABOUT));
				admin.setProfileImageURL(rs.getString(Admin.PROFILE_IMAGE_URL));

				admin.setPhone(rs.getString(Admin.PHONE_NUMBER));
				admin.setDesignation(rs.getString(Admin.DESIGNATION));

				admin.setAccountPrivate(rs.getBoolean(Admin.ACCOUNT_PRIVATE));
				admin.setTimestampCreated(rs.getTimestamp(Admin.TIMESTAMP_CREATED));


			}


			//System.out.println("Total itemCategories queried " + itemCategoryList.size());	


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if (rs != null) {
					rs.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return admin;
	}


	public void logMessage(String message)
	{
		System.out.println(message);
	}




	public Admin checkAdmin(String username, String password)
	{


//		logMessage("Checking Admin");


		boolean isFirst = true;

		String query = 	" SELECT " + Admin.ADMIN_ID + "," + Admin.USER_NAME + "," + Admin.PASSWORD + "," + Admin.ADMIN_NAME +
						" FROM " + Admin.TABLE_NAME;

//		if(adminID!=null)
//		{
//			query = query + " WHERE " + Admin.ADMIN_ID + " = " + adminID;
//
//			isFirst = false;
//		}

		if(username!=null)
		{
			String queryPartUsername = Admin.USER_NAME + " = ? ";

			query = query + " WHERE " + queryPartUsername;

			isFirst = false;
		}


		if(password!=null)
		{
			String queryPartPassword = Admin.PASSWORD + " = ? ";

			if(isFirst)
			{
				query = query + " WHERE " + queryPartPassword;
			}
			else
			{
				query = query + " AND " + queryPartPassword;
			}
		}


//		logMessage(query);


		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;


		//Distributor distributor = null;
		Admin admin = null;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			statement.setObject(1,username);
			statement.setObject(2,password);

			rs = statement.executeQuery();

			while(rs.next())
			{
				admin = new Admin();

				logMessage("Inside check admin");
				admin.setAdminID(rs.getInt(Admin.ADMIN_ID));
				admin.setAdministratorName(rs.getString(Admin.ADMIN_NAME));
				admin.setUsername(rs.getString(Admin.USER_NAME));
				admin.setPassword(rs.getString(Admin.PASSWORD));
			}


			//System.out.println("Total itemCategories queried " + itemCategoryList.size());



		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if(rs!=null)
				{rs.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(statement!=null)
				{statement.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(connection!=null)
				{connection.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return admin;
	}
}
