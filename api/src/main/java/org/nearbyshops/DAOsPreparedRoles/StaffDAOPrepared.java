package org.nearbyshops.DAOsPreparedRoles;

import com.zaxxer.hikari.HikariDataSource;
import org.nearbyshops.Globals.Globals;
import org.nearbyshops.ModelRoles.DeliveryGuySelf;
import org.nearbyshops.ModelRoles.ShopAdmin;
import org.nearbyshops.ModelRoles.Staff;

import java.sql.*;
import java.util.ArrayList;


public class StaffDAOPrepared {


	private HikariDataSource dataSource = Globals.getDataSource();


	@Override
	protected void finalize() throws Throwable {
		// TODO Auto-generated method stub
		super.finalize();
	}



	public int saveStaff(Staff staff) {

		Connection connection = null;
		PreparedStatement statement = null;
		int rowIdOfInsertedRow = -1;

		String insert = "INSERT INTO "
				+ Staff.TABLE_NAME
				+ "("

				+ Staff.STAFF_NAME + ","
				+ Staff.USER_NAME + ","
				+ Staff.PASSWORD + ","

				+ Staff.ABOUT + ","
				+ Staff.PROFILE_IMAGE_URL + ","

				+ Staff.PHONE_NUMBER + ","
				+ Staff.DESIGNATION + ","
				+ Staff.IS_ENABLED + ","
				+ Staff.ACCOUNT_PRIVATE + ","

				+ Staff.GOVERNMENT_ID_NAME + ","
				+ Staff.GOVERNMENT_ID_NUMBER + ","

				+ Staff.CREATE_UPDATE_ITEM_CATEGORY + ","
				+ Staff.CREATE_UPDATE_ITEMS + ","
				+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + ","
				+ Staff.APPROVE_SHOPS + ","
				+ Staff.APPROVE_END_USER_ACCOUNTS + ""



				+ ") VALUES(?,?,? ,?,? ,?,?,?,? ,?,? ,?,?,?,?,?)";

		try {

			connection = dataSource.getConnection();

			statement = connection.prepareStatement(insert, PreparedStatement.RETURN_GENERATED_KEYS);

			int i = 0;
			statement.setString(++i, staff.getStaffName());
			statement.setString(++i, staff.getUsername());
			statement.setString(++i, staff.getPassword());

			statement.setString(++i,staff.getAbout());
			statement.setString(++i,staff.getProfileImageURL());

			statement.setString(++i,staff.getPhone());
			statement.setString(++i,staff.getDesignation());
			statement.setObject(++i,staff.getEnabled());
			statement.setObject(++i,staff.isAccountPrivate());

			statement.setString(++i,staff.getGovtIDName());
			statement.setString(++i,staff.getGovtIDNumber());


			statement.setObject(++i,staff.isCreateUpdateItemCategory());
			statement.setObject(++i,staff.isCreateUpdateItems());
			statement.setObject(++i,staff.isApproveShopAdminAccounts());
			statement.setObject(++i,staff.isApproveShops());
			statement.setObject(++i,staff.isApproveEndUserAccounts());


			rowIdOfInsertedRow = statement.executeUpdate();

			ResultSet rs = statement.getGeneratedKeys();

			if (rs.next()) {
				rowIdOfInsertedRow = rs.getInt(1);
			}


			System.out.println("Key autogenerated SaveDistributor: " + rowIdOfInsertedRow);


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return rowIdOfInsertedRow;
	}


	public int updateStaff(Staff staff) {

		String updateStatement = "UPDATE " + Staff.TABLE_NAME
				+ " SET "

				+ Staff.STAFF_NAME + "=?,"
				+ Staff.USER_NAME + "=?,"
				+ Staff.PASSWORD + "=?,"

				+ Staff.ABOUT + "=?,"
				+ Staff.PROFILE_IMAGE_URL + "=?,"

				+ Staff.PHONE_NUMBER + "=?,"
				+ Staff.DESIGNATION + "=?,"
				+ Staff.IS_ENABLED + "=?,"
				+ Staff.ACCOUNT_PRIVATE + "=?,"

				+ Staff.GOVERNMENT_ID_NAME + "=?,"
				+ Staff.GOVERNMENT_ID_NUMBER + "=?,"

				+ Staff.CREATE_UPDATE_ITEM_CATEGORY + "=?,"
				+ Staff.CREATE_UPDATE_ITEMS + "=?,"
				+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + "=?,"
				+ Staff.APPROVE_SHOPS + "=?,"
				+ Staff.APPROVE_END_USER_ACCOUNTS + "=?"


//				+ Staff.USER_NAME + " =?,"
//				+ Staff.PASSWORD + " =?,"
//
//				+ Staff.DESIGNATION + " =?,"
//				+ Staff.PHONE_NUMBER + " =?,"
//				+ Staff.GOVERNMENT_ID_NAME + " =?,"
//				+ Staff.GOVERNMENT_ID_NUMBER + " =?,"
//
//				+ Staff.ABOUT + " =?,"
//				+ Staff.PROFILE_IMAGE_URL + " =?,"
//
//				+ Staff.IS_ENABLED + " =?,"
//				+ Staff.STAFF_NAME + " =?"

				+ " WHERE " + Staff.STAFF_ID + " = ?";

		Connection connection = null;
		PreparedStatement statement = null;
		int updatedRows = -1;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(updateStatement, PreparedStatement.RETURN_GENERATED_KEYS);

			int i = 0;
			statement.setString(++i, staff.getStaffName());
			statement.setString(++i, staff.getUsername());
			statement.setString(++i, staff.getPassword());

			statement.setString(++i,staff.getAbout());
			statement.setString(++i,staff.getProfileImageURL());

			statement.setString(++i,staff.getPhone());
			statement.setString(++i,staff.getDesignation());
			statement.setObject(++i,staff.getEnabled());
			statement.setObject(++i,staff.isAccountPrivate());

			statement.setString(++i,staff.getGovtIDName());
			statement.setString(++i,staff.getGovtIDNumber());


			statement.setObject(++i,staff.isCreateUpdateItemCategory());
			statement.setObject(++i,staff.isCreateUpdateItems());
			statement.setObject(++i,staff.isApproveShopAdminAccounts());
			statement.setObject(++i,staff.isApproveShops());
			statement.setObject(++i,staff.isApproveEndUserAccounts());

			statement.setObject(++i,staff.getStaffID());

			updatedRows = statement.executeUpdate();


			System.out.println("Total rows updated: " + updatedRows);

			//conn.close();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return updatedRows;

	}



	public int updateStaffBySelf(Staff staff) {

		String updateStatement = "UPDATE " + Staff.TABLE_NAME
				+ " SET "


				+ Staff.STAFF_NAME + "=?,"
				+ Staff.USER_NAME + "=?,"
				+ Staff.PASSWORD + "=?,"

				+ Staff.ABOUT + "=?,"
				+ Staff.PROFILE_IMAGE_URL + "=?,"

				+ Staff.PHONE_NUMBER + "=?,"
				+ Staff.DESIGNATION + "=?,"
//				+ Staff.IS_ENABLED + "=?,"
//				+ Staff.ACCOUNT_PRIVATE + "=?,"

				+ Staff.GOVERNMENT_ID_NAME + "=?,"
				+ Staff.GOVERNMENT_ID_NUMBER + "=?"

//				+ Staff.CREATE_UPDATE_ITEM_CATEGORY + "=?,"
//				+ Staff.CREATE_UPDATE_ITEMS + "=?,"
//				+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + "=?,"
//				+ Staff.APPROVE_SHOPS + "=?,"
//				+ Staff.APPROVE_END_USER_ACCOUNTS + "=?"

				+ " WHERE " + Staff.STAFF_ID + " = ?";

		Connection connection = null;
		PreparedStatement statement = null;
		int updatedRows = -1;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(updateStatement, PreparedStatement.RETURN_GENERATED_KEYS);


			int i = 0;
			statement.setString(++i, staff.getStaffName());
			statement.setString(++i, staff.getUsername());
			statement.setString(++i, staff.getPassword());

			statement.setString(++i,staff.getAbout());
			statement.setString(++i,staff.getProfileImageURL());

			statement.setString(++i,staff.getPhone());
			statement.setString(++i,staff.getDesignation());
//			statement.setObject(++i,staff.getEnabled());
//			statement.setObject(++i,staff.isAccountPrivate());

			statement.setString(++i,staff.getGovtIDName());
			statement.setString(++i,staff.getGovtIDNumber());


//			statement.setObject(++i,staff.isCreateUpdateItemCategory());
//			statement.setObject(++i,staff.isCreateUpdateItems());
//			statement.setObject(++i,staff.isApproveShopAdminAccounts());
//			statement.setObject(++i,staff.isApproveShops());
//			statement.setObject(++i,staff.isApproveEndUserAccounts());

			statement.setObject(++i,staff.getStaffID());

			updatedRows = statement.executeUpdate();


			System.out.println("Total rows updated: " + updatedRows);

			//conn.close();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return updatedRows;

	}


	public int deleteStaff(int staffID) {

		String deleteStatement = "DELETE FROM " + Staff.TABLE_NAME
				+ " WHERE "
				+ Staff.STAFF_ID + " = ?";


		Connection connection = null;
		PreparedStatement statement = null;
		int rowsCountDeleted = 0;
		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(deleteStatement);

			statement.setInt(1, staffID);

			rowsCountDeleted = statement.executeUpdate();

			System.out.println(" Deleted Count: " + rowsCountDeleted);

			connection.close();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}


		return rowsCountDeleted;
	}


	public ArrayList<Staff> getStaffForAdmin(Boolean isEnabled) {


//		boolean isFirst = true;

		String query = "SELECT "

				+ Staff.STAFF_ID + ","
				+ Staff.STAFF_NAME + ","
				+ Staff.USER_NAME + ","
				+ Staff.PASSWORD + ","

				+ Staff.ABOUT + ","
				+ Staff.PROFILE_IMAGE_URL + ","

				+ Staff.PHONE_NUMBER + ","
				+ Staff.DESIGNATION + ","
				+ Staff.IS_ENABLED + ","
				+ Staff.ACCOUNT_PRIVATE + ","

				+ Staff.GOVERNMENT_ID_NAME + ","
				+ Staff.GOVERNMENT_ID_NUMBER + ","
				+ Staff.TIMESTAMP_CREATED + ","

				+ Staff.CREATE_UPDATE_ITEM_CATEGORY + ","
				+ Staff.CREATE_UPDATE_ITEMS + ","
				+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + ","
				+ Staff.APPROVE_SHOPS + ","
				+ Staff.APPROVE_END_USER_ACCOUNTS + "" +

				" FROM " + Staff.TABLE_NAME;



		if(isEnabled !=null)
		{
			query = query + " WHERE " + Staff.IS_ENABLED + " = ?";

//			isFirst = false;
		}



//		logMessage(query);

		ArrayList<Staff> staffList = new ArrayList<Staff>();


		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			if(isEnabled!=null)
			{
				int i = 0;
				statement.setObject(++i,isEnabled);
			}


			rs = statement.executeQuery();

			while (rs.next()) {

				Staff staff = new Staff();

				staff.setStaffID(rs.getInt(Staff.STAFF_ID));
				staff.setStaffName(rs.getString(Staff.STAFF_NAME));
				staff.setUsername(rs.getString(Staff.USER_NAME));
				staff.setPassword(rs.getString(Staff.PASSWORD));

				staff.setAbout(rs.getString(Staff.ABOUT));
				staff.setProfileImageURL(rs.getString(Staff.PROFILE_IMAGE_URL));


				staff.setPhone(rs.getString(Staff.PHONE_NUMBER));
				staff.setDesignation(rs.getString(Staff.DESIGNATION));
				staff.setEnabled(rs.getBoolean(Staff.IS_ENABLED));
				staff.setAccountPrivate(rs.getBoolean(Staff.ACCOUNT_PRIVATE));

				staff.setGovtIDName(rs.getString(Staff.GOVERNMENT_ID_NAME));
				staff.setGovtIDNumber(rs.getString(Staff.GOVERNMENT_ID_NUMBER));
				staff.setTimestampCreated(rs.getTimestamp(Staff.TIMESTAMP_CREATED));

				staff.setCreateUpdateItemCategory(rs.getBoolean(Staff.CREATE_UPDATE_ITEM_CATEGORY));
				staff.setCreateUpdateItems(rs.getBoolean(Staff.CREATE_UPDATE_ITEMS));
				staff.setApproveShopAdminAccounts(rs.getBoolean(Staff.APPROVE_SHOP_ADMIN_ACCOUNTS));
				staff.setApproveShops(rs.getBoolean(Staff.APPROVE_SHOPS));
				staff.setApproveEndUserAccounts(rs.getBoolean(Staff.APPROVE_END_USER_ACCOUNTS));

				staffList.add(staff);
			}


			logMessage("Staff List Size : " + String.valueOf(staffList.size()));

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if (rs != null) {
					rs.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}


		return staffList;
	}


	public Staff getStaffForSelf(int staffID) {

		String query = "SELECT "

				+ Staff.STAFF_ID + ","
				+ Staff.STAFF_NAME + ","
				+ Staff.USER_NAME + ","
				+ Staff.PASSWORD + ","

				+ Staff.ABOUT + ","
				+ Staff.PROFILE_IMAGE_URL + ","

				+ Staff.PHONE_NUMBER + ","
				+ Staff.DESIGNATION + ","
				+ Staff.IS_ENABLED + ","
				+ Staff.ACCOUNT_PRIVATE + ","

				+ Staff.GOVERNMENT_ID_NAME + ","
				+ Staff.GOVERNMENT_ID_NUMBER + ","
				+ Staff.TIMESTAMP_CREATED + ""

//				+ Staff.CREATE_UPDATE_ITEM_CATEGORY + ","
//				+ Staff.CREATE_UPDATE_ITEMS + ","
//				+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + ","
//				+ Staff.APPROVE_SHOPS + ","
//				+ Staff.APPROVE_END_USER_ACCOUNTS + "" +

				+ " FROM " + Staff.TABLE_NAME
				+ " WHERE " + Staff.STAFF_ID + " = ?";

		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;


		//Distributor distributor = null;
		Staff staff = null;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			statement.setObject(1,staffID);

			rs = statement.executeQuery();

			while (rs.next()) {

				staff = new Staff();


				staff.setStaffID(rs.getInt(Staff.STAFF_ID));
				staff.setStaffName(rs.getString(Staff.STAFF_NAME));
				staff.setUsername(rs.getString(Staff.USER_NAME));
				staff.setPassword(rs.getString(Staff.PASSWORD));

				staff.setAbout(rs.getString(Staff.ABOUT));
				staff.setProfileImageURL(rs.getString(Staff.PROFILE_IMAGE_URL));


				staff.setPhone(rs.getString(Staff.PHONE_NUMBER));
				staff.setDesignation(rs.getString(Staff.DESIGNATION));
				staff.setEnabled(rs.getBoolean(Staff.IS_ENABLED));
				staff.setAccountPrivate(rs.getBoolean(Staff.ACCOUNT_PRIVATE));

				staff.setGovtIDName(rs.getString(Staff.GOVERNMENT_ID_NAME));
				staff.setGovtIDNumber(rs.getString(Staff.GOVERNMENT_ID_NUMBER));
				staff.setTimestampCreated(rs.getTimestamp(Staff.TIMESTAMP_CREATED));

//				staff.setCreateUpdateItemCategory(rs.getBoolean(Staff.CREATE_UPDATE_ITEM_CATEGORY));
//				staff.setCreateUpdateItems(rs.getBoolean(Staff.CREATE_UPDATE_ITEMS));
//				staff.setApproveShopAdminAccounts(rs.getBoolean(Staff.APPROVE_SHOP_ADMIN_ACCOUNTS));
//				staff.setApproveShops(rs.getBoolean(Staff.APPROVE_SHOPS));
//				staff.setApproveEndUserAccounts(rs.getBoolean(Staff.APPROVE_END_USER_ACCOUNTS));
			}


			//System.out.println("Total itemCategories queried " + itemCategoryList.size());	


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if (rs != null) {
					rs.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return staff;
	}



	public boolean checkUsernameExists(String username)
	{

		String query = "SELECT " + Staff.USER_NAME
				+ " FROM " + Staff.TABLE_NAME
				+ " WHERE " + Staff.USER_NAME + " = ?";

		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;

		System.out.println("Checked Username : " + username);

//		ShopAdmin shopAdmin = null;



		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			statement.setObject(1,username);

			rs = statement.executeQuery();


			while(rs.next())
			{

				return true;
			}


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if(rs!=null)
				{rs.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(statement!=null)
				{statement.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(connection!=null)
				{connection.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return false;
	}



	public void logMessage(String message)
	{
		System.out.println(message);
	}



	public Staff checkStaff(String username, String password)
	{


		logMessage("Checking Staff");


		boolean isFirst = true;

		String query = "SELECT "
						+ Staff.STAFF_ID + ","
						+ Staff.USER_NAME + ","
						+ Staff.PASSWORD + ","
						+ Staff.IS_ENABLED  + ","

						+ Staff.CREATE_UPDATE_ITEM_CATEGORY + ","
						+ Staff.CREATE_UPDATE_ITEMS + ","
						+ Staff.APPROVE_SHOP_ADMIN_ACCOUNTS + ","
						+ Staff.APPROVE_SHOPS + ","
						+ Staff.APPROVE_END_USER_ACCOUNTS + "" +

						" FROM " + Staff.TABLE_NAME;

//		if(staffID!=null)
//		{
//			query = query + " WHERE " + Staff.STAFF_ID + " = " + staffID;
//
//			isFirst = false;
//		}

		if(username!=null)
		{
			String queryPartUsername = Staff.USER_NAME + " = ?";

			query = query + " WHERE " + queryPartUsername;

			isFirst = false;
		}


		if(password!=null)
		{
			String queryPartPassword = Staff.PASSWORD + " = ?";

			if(isFirst)
			{
				query = query + " WHERE " + queryPartPassword;
			}
			else
			{
				query = query + " AND " + queryPartPassword;
			}
		}


		logMessage(query);


		Connection connection = null;
		PreparedStatement statement = null;
		ResultSet rs = null;


		//Distributor distributor = null;
		Staff staff = null;

		try {

			connection = dataSource.getConnection();
			statement = connection.prepareStatement(query);

			int i = 0;

			if(username!=null)
			{
				statement.setObject(++i,username);
			}

			if(password!=null)
			{
				statement.setObject(++i,password);
			}


			rs = statement.executeQuery();

			while(rs.next())
			{
				staff = new Staff();

				staff.setStaffID(rs.getInt(Staff.STAFF_ID));
				staff.setUsername(rs.getString(Staff.USER_NAME));
				staff.setPassword(rs.getString(Staff.PASSWORD));
				staff.setEnabled(rs.getBoolean(Staff.IS_ENABLED));

				staff.setCreateUpdateItemCategory(rs.getBoolean(Staff.CREATE_UPDATE_ITEM_CATEGORY));
				staff.setCreateUpdateItems(rs.getBoolean(Staff.CREATE_UPDATE_ITEMS));
				staff.setApproveShopAdminAccounts(rs.getBoolean(Staff.APPROVE_SHOP_ADMIN_ACCOUNTS));
				staff.setApproveShops(rs.getBoolean(Staff.APPROVE_SHOPS));
				staff.setApproveEndUserAccounts(rs.getBoolean(Staff.APPROVE_END_USER_ACCOUNTS));

			}


			//System.out.println("Total itemCategories queried " + itemCategoryList.size());



		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally

		{

			try {
				if(rs!=null)
				{rs.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(statement!=null)
				{statement.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {

				if(connection!=null)
				{connection.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return staff;
	}
}
