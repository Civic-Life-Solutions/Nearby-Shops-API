package org.nearbyshops.Service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import org.nearbyshops.contractClasses.JDBCContract;
import org.nearbyshops.contractClasses.ShopContract;
import org.nearbyshops.model.Shop;

public class ShopService {
	
	
	public int insertShop(Shop shop)
	{
		
		Connection conn = null;
		Statement stmt = null;
		int rowIdOfInsertedRow = -1;

		String insertShop = "INSERT INTO "
				+ ShopContract.TABLE_NAME				
				+ "("  
				+ ShopContract.SHOP_NAME + ","
				+ ShopContract.AVERAGE_RATING + ","
				+ ShopContract.DELIVERY_CHARGES + ","
				+ ShopContract.DISTRIBUTOR_ID + ","
				+ ShopContract.LATITUDE + ","
				+ ShopContract.LONGITUDE + ","
				+ ShopContract.RADIUS_OF_SERVICE + ","
				+ ShopContract.IMAGE_PATH + ""
				+ " ) VALUES ("
				+ "'" + shop.getShopName() + "'," 
				+ "" + shop.getAverageRating() + "," 
				+ "" + shop.getDeliveryCharges() + ","
				+ "" + shop.getDistributorID() + ","
				+ "" + shop.getLatitude() + ","
				+ "" + shop.getLongitude() + ","
				+ "" + shop.getRadiusOfService() + ","
				+ "'" + shop.getImagePath() + "'" + ")";
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rowIdOfInsertedRow = stmt.executeUpdate(insertShop,Statement.RETURN_GENERATED_KEYS);
			
			ResultSet rs = stmt.getGeneratedKeys();
			
			if(rs.next())
			{
				rowIdOfInsertedRow = rs.getInt(1);
			}
			
			
			
			System.out.println("Key autogenerated SaveShop: " + rowIdOfInsertedRow);
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		
		return rowIdOfInsertedRow;

	}
	
	
	public int updateShop(Shop shop)
	{
		
		
		String updateStatement = "UPDATE " + ShopContract.TABLE_NAME 
				+ " SET " + ShopContract.SHOP_NAME + " = "
				+ "'" + shop.getShopName() + "',"
				+ ShopContract.AVERAGE_RATING + " ="
				+ "" + shop.getAverageRating() + ","
				+ ShopContract.DELIVERY_CHARGES + " ="
				+ "" + shop.getDeliveryCharges() + ","
				+ ShopContract.DISTRIBUTOR_ID + " ="
				+ "" + shop.getDistributorID() + ","
				+ ShopContract.LATITUDE + " ="
				+ "" + shop.getLatitude() + ","
				+ ShopContract.LONGITUDE + " ="
				+ "" + shop.getLongitude() + ","
				+ ShopContract.RADIUS_OF_SERVICE + " ="
				+ "" + shop.getRadiusOfService() + ","
				+ ShopContract.IMAGE_PATH + " ="
				+ "'" + shop.getImagePath() + "'"
				+ " WHERE " + ShopContract.SHOP_ID + " = "
				+ shop.getShopID();
		
		
		
		Connection conn = null;
		Statement stmt = null;
		int updatedRows = -1;
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			updatedRows = stmt.executeUpdate(updateStatement);
			
			
			System.out.println("Total rows updated: " + updatedRows);	
			
			//conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally
		
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return updatedRows;

	}
	
	
	public int deleteShop(int shopID)
	{
		
		String deleteStatement = "DELETE FROM " + ShopContract.TABLE_NAME 
				+ " WHERE " + ShopContract.SHOP_ID + "= " 
				+ shopID;
		
		
		Connection conn= null;
		Statement stmt = null;
		int rowCountDeleted = 0;
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rowCountDeleted = stmt.executeUpdate(deleteStatement);
			
			System.out.println(" Deleted Count: " + rowCountDeleted);	
			
			conn.close();	
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		finally
		
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	
		
		return rowCountDeleted;
	}
	
	
	
	public ArrayList<Shop> getShops(int distributorID)
	{
		String query = "SELECT * FROM " + ShopContract.TABLE_NAME;
		
		if(distributorID > 0)
		{
			query = query + " WHERE " 
					+ ShopContract.DISTRIBUTOR_ID + " = " + distributorID;
		}
		
		
		
		
		ArrayList<Shop> shopList = new ArrayList<Shop>();
		
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,
					JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery(query);
			
			while(rs.next())
			{
				
				Shop shop = new Shop();
				shop.setShopID(rs.getInt(ShopContract.SHOP_ID));
				shop.setShopName(rs.getString(ShopContract.SHOP_NAME));
				shop.setLatitude(rs.getFloat(ShopContract.LATITUDE));
				shop.setLongitude(rs.getFloat(ShopContract.LONGITUDE));
				shop.setAverageRating(rs.getFloat(ShopContract.AVERAGE_RATING));
				shop.setDeliveryCharges(rs.getFloat(ShopContract.DELIVERY_CHARGES));
				shop.setDistributorID(rs.getInt(ShopContract.DISTRIBUTOR_ID));
				shop.setRadiusOfService(rs.getDouble(ShopContract.RADIUS_OF_SERVICE));
				shop.setImagePath(rs.getString(ShopContract.IMAGE_PATH));
				shopList.add(shop);
				
			}
			
			System.out.println("Total Shops queried " + shopList.size());	
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

		finally
		
		{
			
			try {
					if(rs!=null)
					{rs.close();}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
								
		return shopList;
	}
	
	
	
	public Shop getShop(int ShopID)
	{		
		String query = "SELECT * FROM " + ShopContract.TABLE_NAME 
						+ " WHERE "	+  ShopContract.SHOP_ID + "= " + ShopID;
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		Shop shop = null;
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,
					JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery(query);
			
			
			while(rs.next())
			{
				
				shop = new Shop();
				shop.setShopID(rs.getInt(ShopContract.SHOP_ID));
				shop.setShopName(rs.getString(ShopContract.SHOP_NAME));
				shop.setLatitude(rs.getFloat(ShopContract.LATITUDE));
				shop.setLongitude(rs.getFloat(ShopContract.LONGITUDE));
				shop.setAverageRating(rs.getFloat(ShopContract.AVERAGE_RATING));
				shop.setDeliveryCharges(rs.getFloat(ShopContract.DELIVERY_CHARGES));
				shop.setDistributorID(rs.getInt(ShopContract.DISTRIBUTOR_ID));
				shop.setRadiusOfService(rs.getDouble(ShopContract.RADIUS_OF_SERVICE));
				shop.setImagePath(rs.getString(ShopContract.IMAGE_PATH));
				
			}
	
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally
		
		{
			
			try {
					if(rs!=null)
					{rs.close();}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	
		return shop;
	}
	
}
