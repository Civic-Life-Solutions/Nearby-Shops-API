package org.nearbyshops.BackupsDAO;


import org.nearbyshops.JDBCContract;
import org.nearbyshops.ModelSettings.ServiceConfigurationLocal;

import java.sql.*;
import java.util.ArrayList;


public class ServiceConfigurationDAO {

	
	@Override
	protected void finalize() throws Throwable {
		// TODO Auto-generated method stub
		super.finalize();	
	}
	



	
	public int saveService(ServiceConfigurationLocal serviceConfigurationLocal)
	{

		Connection conn = null;
		Statement stmt = null;
		int rowIdOfInsertedRow = -1;

		String insertItemCategory = "INSERT INTO "
				+ ServiceConfigurationLocal.TABLE_NAME
				+ "("

//				+ ServiceConfigurationLocal.IMAGE_PATH + ","
				+ ServiceConfigurationLocal.LOGO_IMAGE_PATH + ","
				+ ServiceConfigurationLocal.BACKDROP_IMAGE_PATH + ","

				+ ServiceConfigurationLocal.SERVICE_NAME + ","
				+ ServiceConfigurationLocal.HELPLINE_NUMBER + ","
				+ ServiceConfigurationLocal.ADDRESS + ","

				+ ServiceConfigurationLocal.CITY + ","
				+ ServiceConfigurationLocal.PINCODE + ","
				+ ServiceConfigurationLocal.LANDMARK + ","

				+ ServiceConfigurationLocal.STATE + ","
				+ ServiceConfigurationLocal.COUNTRY + ","
				+ ServiceConfigurationLocal.ISO_COUNTRY_CODE + ","

				+ ServiceConfigurationLocal.ISO_LANGUAGE_CODE + ","
				+ ServiceConfigurationLocal.SERVICE_TYPE + ","
				+ ServiceConfigurationLocal.SERVICE_LEVEL + ","

				+ ServiceConfigurationLocal.LAT_CENTER + ","
				+ ServiceConfigurationLocal.LON_CENTER + ","
				+ ServiceConfigurationLocal.SERVICE_RANGE + ","

//				+ ServiceConfigurationLocal.LAT_MAX + ","
//				+ ServiceConfigurationLocal.LON_MAX + ","
//				+ ServiceConfigurationLocal.LAT_MIN + ","
//				+ ServiceConfigurationLocal.LON_MIN + ","

				+ ServiceConfigurationLocal.UPDATED + ","

				+ " ) VALUES ( "

//				+ "'" + serviceConfigurationLocal.getImagePath()	+ "',"
				+ "'" + serviceConfigurationLocal.getLogoImagePath()	+ "',"
				+ "'" + serviceConfigurationLocal.getBackdropImagePath()	+ "',"

				+ "'" + serviceConfigurationLocal.getServiceName()	+ "',"
				+ "'" + serviceConfigurationLocal.getHelplineNumber()	+ "',"
				+ "'" + serviceConfigurationLocal.getAddress()	+ "',"

				+ "'" + serviceConfigurationLocal.getCity()	+ "',"
				+ "" + serviceConfigurationLocal.getPincode()	+ ","
				+ "'" + serviceConfigurationLocal.getLandmark()	+ "',"

				+ "'" + serviceConfigurationLocal.getState()	+ "',"
				+ "'" + serviceConfigurationLocal.getCountry()	+ "',"
				+ "'" + serviceConfigurationLocal.getISOCountryCode()	+ "',"

				+ "'" + serviceConfigurationLocal.getISOLanguageCode()	+ "',"
				+ "" + serviceConfigurationLocal.getServiceType()	+ ","
				+ "" + serviceConfigurationLocal.getServiceLevel()	+ ","

				+ "" + serviceConfigurationLocal.getLatCenter()	+ ","
				+ "" + serviceConfigurationLocal.getLonCenter()	+ ","
				+ "" + serviceConfigurationLocal.getServiceRange()	+ ","

//				+ "" + serviceConfigurationLocal.getLatMax()	+ ","
//
//				+ "" + serviceConfigurationLocal.getLonMax()	+ ","
//				+ "" + serviceConfigurationLocal.getLatMin()	+ ","
//				+ "" + serviceConfigurationLocal.getLonMin()	+ ","

				+ "'" + "now()"	+ "',"
				+ ")";
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rowIdOfInsertedRow = stmt.executeUpdate(insertItemCategory,Statement.RETURN_GENERATED_KEYS);
			
			ResultSet rs = stmt.getGeneratedKeys();

			if(rs.next())
			{
				rowIdOfInsertedRow = rs.getInt(1);
			}
			
			
			
			System.out.println("Key autogenerated Save CurrentServiceConfiguration: " + rowIdOfInsertedRow);
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		
		return rowIdOfInsertedRow;
	}




	public int updateService(ServiceConfigurationLocal serviceConfigurationLocal)
	{	
		String updateStatement = "UPDATE " + ServiceConfigurationLocal.TABLE_NAME

				+ " SET "

//				+ ServiceConfigurationLocal.IMAGE_PATH + " = " + "'" + serviceConfigurationLocal.getImagePath() + "'" + ","
				+ ServiceConfigurationLocal.LOGO_IMAGE_PATH + " = " + "'" + serviceConfigurationLocal.getLogoImagePath() + "'" + ","
				+ ServiceConfigurationLocal.BACKDROP_IMAGE_PATH + " = " + "'" + serviceConfigurationLocal.getBackdropImagePath() + "'" + ","

				+ ServiceConfigurationLocal.SERVICE_NAME + " = " + "'" + serviceConfigurationLocal.getServiceName() + "'" + ","
				+ ServiceConfigurationLocal.HELPLINE_NUMBER + " = " + "'" + serviceConfigurationLocal.getHelplineNumber() + "'" + ","
				+ ServiceConfigurationLocal.ADDRESS + " = " + "'" + serviceConfigurationLocal.getAddress() + "'" + ","

				+ ServiceConfigurationLocal.CITY + " = " + "'" + serviceConfigurationLocal.getCity() + "'" + ","
				+ ServiceConfigurationLocal.PINCODE + " = " + "" + serviceConfigurationLocal.getPincode() + "" + ","
				+ ServiceConfigurationLocal.LANDMARK + " = " + "'" + serviceConfigurationLocal.getLandmark() + "'" + ","

				+ ServiceConfigurationLocal.STATE + " = " + "'" + serviceConfigurationLocal.getState() + "'" + ","
				+ ServiceConfigurationLocal.COUNTRY + " = " + "'" + serviceConfigurationLocal.getCountry() + "'" + ","
				+ ServiceConfigurationLocal.ISO_COUNTRY_CODE + " = " + "'" + serviceConfigurationLocal.getISOCountryCode() + "'" + ","

				+ ServiceConfigurationLocal.ISO_LANGUAGE_CODE + " = " + "'" + serviceConfigurationLocal.getISOLanguageCode() + "'" + ","
				+ ServiceConfigurationLocal.SERVICE_TYPE + " = " + "" + serviceConfigurationLocal.getServiceType() + "" + ","
				+ ServiceConfigurationLocal.SERVICE_LEVEL + " = " + "" + serviceConfigurationLocal.getServiceLevel() + "" + ","

				+ ServiceConfigurationLocal.LAT_CENTER + " = " + "" + serviceConfigurationLocal.getLatCenter() + "" + ","
				+ ServiceConfigurationLocal.LON_CENTER + " = " + "" + serviceConfigurationLocal.getLonCenter() + "" + ","
				+ ServiceConfigurationLocal.SERVICE_RANGE + " = " + "" + serviceConfigurationLocal.getServiceRange() + "" + ","

//				+ ServiceConfigurationLocal.LAT_MAX + " = " + "" + serviceConfigurationLocal.getLatMax() + "" + ","
//
//				+ ServiceConfigurationLocal.LON_MAX + " = " + "" + serviceConfigurationLocal.getLonMax() + "" + ","
//				+ ServiceConfigurationLocal.LAT_MIN + " = " + "" + serviceConfigurationLocal.getLatMin() + "" + ","
//				+ ServiceConfigurationLocal.LON_MIN + " = " + "" + serviceConfigurationLocal.getLonMin() + "" + ","

				+ ServiceConfigurationLocal.UPDATED + " = " + "'" + "now()" + "'" + ","

				+ " WHERE "

				+ ServiceConfigurationLocal.SERVICE_CONFIGURATION_ID + " = " + 1;


		Connection conn = null;
		Statement stmt = null;
		int updatedRows = -1;
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			updatedRows = stmt.executeUpdate(updateStatement);
			
			
			System.out.println("Total rows updated: " + updatedRows);	
			
			//conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally
		
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		return updatedRows;
		
	}




	public int deleteService(int serviceID)
	{
		
		String deleteStatement = "DELETE FROM " + ServiceConfigurationLocal.TABLE_NAME + " WHERE " + ServiceConfigurationLocal.SERVICE_CONFIGURATION_ID + " = "
				+ serviceID;
		
		
		Connection conn= null;
		Statement stmt = null;
		int rowsCountDeleted = 0;
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rowsCountDeleted = stmt.executeUpdate(deleteStatement);
			
			System.out.println(" Deleted Count: " + rowsCountDeleted);	
			
			conn.close();	
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		finally
		
		{
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	
		
		return rowsCountDeleted;
	}
	


	
	
	
	public ArrayList<ServiceConfigurationLocal> readServices(Integer serviceLevel, Integer serviceType,
                                                             Double latCenterQuery, Double lonCenterQuery,
                                                             String sortBy,
                                                             int limit, int offset)
	{


		String queryNormal = "SELECT " + " 6371 * acos(cos( radians("
							+ latCenterQuery + ")) * cos( radians( " + ServiceConfigurationLocal.LAT_CENTER
							+ ")) * cos(radians( "
							+ ServiceConfigurationLocal.LON_CENTER + ") - radians(" + lonCenterQuery + "))"
							+ " + sin( radians(" + latCenterQuery+ ")) * sin(radians(" + ServiceConfigurationLocal.LAT_CENTER + "))) as distance" + ","
							+ " * FROM " + ServiceConfigurationLocal.TABLE_NAME;


		boolean isFirst = true;


		if(serviceLevel > 0)
		{
			queryNormal = queryNormal + " WHERE " + ServiceConfigurationLocal.SERVICE_LEVEL + " = " + serviceLevel;

			isFirst = false;
		}



		if(serviceType > 0 )
		{
			if(isFirst)
			{
				queryNormal = queryNormal + " WHERE " + ServiceConfigurationLocal.SERVICE_TYPE + " = " + serviceType;

				isFirst = false;

			}else
			{
				queryNormal = queryNormal + " AND " + ServiceConfigurationLocal.SERVICE_TYPE + " = " + serviceType;

			}

		}



		// apply visibility filter


		if(latCenterQuery!=null && lonCenterQuery!=null)
		{

			String queryPartVisibilityFilter = "";




			// filter using Haversine formula using SQL math functions
			queryPartVisibilityFilter = queryPartVisibilityFilter
					+ " (6371.01 * acos(cos( radians("
					+ latCenterQuery
					+ ")) * cos( radians("
					+ ServiceConfigurationLocal.LAT_CENTER
					+ " )) * cos(radians( "
					+ ServiceConfigurationLocal.LON_CENTER
					+ ") - radians("
					+ lonCenterQuery
					+ "))"
					+ " + sin( radians("
					+ latCenterQuery
					+ ")) * sin(radians("
					+ ServiceConfigurationLocal.LAT_CENTER
					+ ")))) <= "
					+ ServiceConfigurationLocal.SERVICE_RANGE ;





			if(isFirst)
			{
				queryNormal = queryNormal + " WHERE ";

				// reset the flag
				isFirst = false;

			}else
			{
				queryNormal = queryNormal + " AND ";
			}



			queryNormal = queryNormal + queryPartVisibilityFilter;


		}





		if(sortBy!=null)
		{
			if(!sortBy.equals(""))
			{
				String queryPartSortBy = " ORDER BY " + sortBy;

				queryNormal = queryNormal + queryPartSortBy;
			}
		}



		if(limit > 0)
		{

			String queryPartLimitOffset = "";

			if(offset>0)
			{
				queryPartLimitOffset = " LIMIT " + limit + " " + " OFFSET " + offset;

			}else
			{
				queryPartLimitOffset = " LIMIT " + limit + " " + " OFFSET " + 0;
			}


			queryNormal = queryNormal + queryPartLimitOffset;
		}



		ArrayList<ServiceConfigurationLocal> servicesList = new ArrayList<ServiceConfigurationLocal>();
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL
					,JDBCContract.CURRENT_USERNAME
					, JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery(queryNormal);
			
			while(rs.next())
			{
				ServiceConfigurationLocal serviceConfigurationLocal = new ServiceConfigurationLocal();

				serviceConfigurationLocal.setRt_distance(rs.getDouble("distance"));

				serviceConfigurationLocal.setServiceID(rs.getInt(ServiceConfigurationLocal.SERVICE_CONFIGURATION_ID));
//				serviceConfigurationLocal.setImagePath(rs.getString(ServiceConfigurationLocal.IMAGE_PATH));
				serviceConfigurationLocal.setLogoImagePath(rs.getString(ServiceConfigurationLocal.LOGO_IMAGE_PATH));

				serviceConfigurationLocal.setBackdropImagePath(rs.getString(ServiceConfigurationLocal.BACKDROP_IMAGE_PATH));
				serviceConfigurationLocal.setServiceName(rs.getString(ServiceConfigurationLocal.SERVICE_NAME));
				serviceConfigurationLocal.setHelplineNumber(rs.getString(ServiceConfigurationLocal.HELPLINE_NUMBER));

				serviceConfigurationLocal.setAddress(rs.getString(ServiceConfigurationLocal.ADDRESS));
				serviceConfigurationLocal.setCity(rs.getString(ServiceConfigurationLocal.CITY));
				serviceConfigurationLocal.setPincode(rs.getLong(ServiceConfigurationLocal.PINCODE));

				serviceConfigurationLocal.setLandmark(rs.getString(ServiceConfigurationLocal.LANDMARK));
				serviceConfigurationLocal.setState(rs.getString(ServiceConfigurationLocal.STATE));
				serviceConfigurationLocal.setCountry(rs.getString(ServiceConfigurationLocal.COUNTRY));

				serviceConfigurationLocal.setISOCountryCode(rs.getString(ServiceConfigurationLocal.ISO_COUNTRY_CODE));
				serviceConfigurationLocal.setISOLanguageCode(rs.getString(ServiceConfigurationLocal.ISO_LANGUAGE_CODE));
				serviceConfigurationLocal.setServiceType(rs.getInt(ServiceConfigurationLocal.SERVICE_TYPE));

				serviceConfigurationLocal.setServiceLevel(rs.getInt(ServiceConfigurationLocal.SERVICE_LEVEL));
				serviceConfigurationLocal.setLatCenter(rs.getDouble(ServiceConfigurationLocal.LAT_CENTER));
				serviceConfigurationLocal.setLonCenter(rs.getDouble(ServiceConfigurationLocal.LON_CENTER));

				serviceConfigurationLocal.setServiceRange(rs.getInt(ServiceConfigurationLocal.SERVICE_RANGE));

//				serviceConfigurationLocal.setLatMax(rs.getDouble(ServiceConfigurationLocal.LAT_MAX));
//				serviceConfigurationLocal.setLonMax(rs.getDouble(ServiceConfigurationLocal.LON_MAX));
//				serviceConfigurationLocal.setLatMin(rs.getDouble(ServiceConfigurationLocal.LAT_MIN));
//
//				serviceConfigurationLocal.setLonMin(rs.getDouble(ServiceConfigurationLocal.LON_MIN));

				serviceConfigurationLocal.setCreated(rs.getTimestamp(ServiceConfigurationLocal.CREATED));
				serviceConfigurationLocal.setUpdated(rs.getTimestamp(ServiceConfigurationLocal.UPDATED));


				servicesList.add(serviceConfigurationLocal);
				
			}
			

			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

		finally
		
		{
			
			try {
					if(rs!=null)
					{rs.close();}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
								
		return servicesList;
	}





	public ServiceConfigurationLocal readService(int serviceID)
	{
		
		String query = "SELECT * FROM " + ServiceConfigurationLocal.TABLE_NAME
						+ " WHERE " + ServiceConfigurationLocal.SERVICE_CONFIGURATION_ID + " = " + serviceID;
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;


		ServiceConfigurationLocal serviceConfigurationLocal = null;

		
		try {
			
			conn = DriverManager.getConnection(JDBCContract.CURRENT_CONNECTION_URL,
					JDBCContract.CURRENT_USERNAME,JDBCContract.CURRENT_PASSWORD);
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery(query);
			
			while(rs.next())
			{
				serviceConfigurationLocal = new ServiceConfigurationLocal();

				serviceConfigurationLocal.setServiceID(rs.getInt(ServiceConfigurationLocal.SERVICE_CONFIGURATION_ID));
//				serviceConfigurationLocal.setImagePath(rs.getString(ServiceConfigurationLocal.IMAGE_PATH));
				serviceConfigurationLocal.setLogoImagePath(rs.getString(ServiceConfigurationLocal.LOGO_IMAGE_PATH));

				serviceConfigurationLocal.setBackdropImagePath(rs.getString(ServiceConfigurationLocal.BACKDROP_IMAGE_PATH));
				serviceConfigurationLocal.setServiceName(rs.getString(ServiceConfigurationLocal.SERVICE_NAME));
				serviceConfigurationLocal.setHelplineNumber(rs.getString(ServiceConfigurationLocal.HELPLINE_NUMBER));

				serviceConfigurationLocal.setAddress(rs.getString(ServiceConfigurationLocal.ADDRESS));
				serviceConfigurationLocal.setCity(rs.getString(ServiceConfigurationLocal.CITY));
				serviceConfigurationLocal.setPincode(rs.getLong(ServiceConfigurationLocal.PINCODE));

				serviceConfigurationLocal.setLandmark(rs.getString(ServiceConfigurationLocal.LANDMARK));
				serviceConfigurationLocal.setState(rs.getString(ServiceConfigurationLocal.STATE));
				serviceConfigurationLocal.setCountry(rs.getString(ServiceConfigurationLocal.COUNTRY));

				serviceConfigurationLocal.setISOCountryCode(rs.getString(ServiceConfigurationLocal.ISO_COUNTRY_CODE));
				serviceConfigurationLocal.setISOLanguageCode(rs.getString(ServiceConfigurationLocal.ISO_LANGUAGE_CODE));
				serviceConfigurationLocal.setServiceType(rs.getInt(ServiceConfigurationLocal.SERVICE_TYPE));

				serviceConfigurationLocal.setServiceLevel(rs.getInt(ServiceConfigurationLocal.SERVICE_LEVEL));
				serviceConfigurationLocal.setLatCenter(rs.getDouble(ServiceConfigurationLocal.LAT_CENTER));
				serviceConfigurationLocal.setLonCenter(rs.getDouble(ServiceConfigurationLocal.LON_CENTER));

				serviceConfigurationLocal.setServiceRange(rs.getInt(ServiceConfigurationLocal.SERVICE_RANGE));

//				serviceConfigurationLocal.setLatMax(rs.getDouble(ServiceConfigurationLocal.LAT_MAX));
//				serviceConfigurationLocal.setLonMax(rs.getDouble(ServiceConfigurationLocal.LON_MAX));
//				serviceConfigurationLocal.setLatMin(rs.getDouble(ServiceConfigurationLocal.LAT_MIN));
//
//				serviceConfigurationLocal.setLonMin(rs.getDouble(ServiceConfigurationLocal.LON_MIN));

				serviceConfigurationLocal.setCreated(rs.getTimestamp(ServiceConfigurationLocal.CREATED));
				serviceConfigurationLocal.setUpdated(rs.getTimestamp(ServiceConfigurationLocal.UPDATED));


			}
			
			
			//System.out.println("Total itemCategories queried " + itemCategoryList.size());	
	
		
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally
		
		{
			
			try {
					if(rs!=null)
					{rs.close();}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			try {
			
				if(stmt!=null)
				{stmt.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
				
				if(conn!=null)
				{conn.close();}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	
		return serviceConfigurationLocal;
	}	
}
